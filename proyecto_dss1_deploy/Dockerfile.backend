FROM python:3.12-slim

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=on

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential default-libmysqlclient-dev pkg-config netcat-traditional \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

RUN pip install --no-cache-dir \
    Django==5.2.5 djangorestframework djangorestframework-simplejwt \
    mysqlclient django-cors-headers gunicorn uvicorn[standard]

# ðŸ‘‡ OJO al espacio en el nombre del folder; usa comillas y / (no \).
COPY ["proyecto DSS1/backend/", "/app/backend/"]

# Crea el overlay de settings para contenedor
RUN python - <<'PY'
from pathlib import Path
p = Path('/app/backend/backend/settings_docker.py')
p.parent.mkdir(parents=True, exist_ok=True)  # asegura /app/backend/backend
p.write_text('''\
from .settings import *
import os, pathlib
ALLOWED_HOSTS = ['*']
CORS_ALLOW_ALL_ORIGINS = True

# DB por variables de entorno
DATABASES['default'].update({
    'HOST': os.environ.get('DB_HOST', 'db'),
    'NAME': os.environ.get('DB_NAME', 'monitoreo_db'),
    'USER': os.environ.get('DB_USER', 'root'),
    'PASSWORD': os.environ.get('DB_PASSWORD', 'example'),
    'PORT': os.environ.get('DB_PORT', '3306'),
})

# Static para collectstatic
BASE_DIR = pathlib.Path(__file__).resolve().parent.parent
STATIC_URL = '/static/'
STATIC_ROOT = str((BASE_DIR / 'staticfiles').resolve())
''')
PY

# Entrypoint
COPY ["proyecto_dss1_deploy/entrypoint.sh", "/entrypoint.sh"]
RUN chmod +x /entrypoint.sh

ENV DJANGO_SETTINGS_MODULE=backend.settings_docker
EXPOSE 8000
CMD ["/entrypoint.sh"]
