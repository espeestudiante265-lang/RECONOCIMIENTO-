FROM python:3.12-slim

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1

# Dependencias del sistema (mysqlclient necesita headers)
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential default-libmysqlclient-dev pkg-config netcat-traditional \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# âœ… Actualiza pip aquÃ­ (no en requirements.txt)
RUN python -m pip install --upgrade pip

# âœ… Instala dependencias de Python desde requirements.txt
COPY requirements.txt /app/requirements.txt
RUN pip install --no-cache-dir -r /app/requirements.txt

# ðŸ‘‡ OJO al espacio en el nombre del folder; usa comillas.
#    AsegÃºrate de ejecutar `docker build` desde la raÃ­z del repo que contiene estas rutas.
COPY ["proyecto DSS1/backend/", "/app/backend/"]

# Crea overlay de settings para contenedor
RUN python - <<'PY'
from pathlib import Path
p = Path('/app/backend/backend/settings_docker.py')
p.parent.mkdir(parents=True, exist_ok=True)
p.write_text('''\
from .settings import *
import os, pathlib
ALLOWED_HOSTS = ['*']
CORS_ALLOW_ALL_ORIGINS = True

DATABASES['default'].update({
    'HOST': os.environ.get('DB_HOST', 'db'),
    'NAME': os.environ.get('DB_NAME', 'monitoreo_db'),
    'USER': os.environ.get('DB_USER', 'root'),
    'PASSWORD': os.environ.get('DB_PASSWORD', 'example'),
    'PORT': os.environ.get('DB_PORT', '3306'),
})

BASE_DIR = pathlib.Path(__file__).resolve().parent.parent
STATIC_URL = '/static/'
STATIC_ROOT = str((BASE_DIR / 'staticfiles').resolve())
''')
PY

# Entrypoint
COPY ["proyecto_dss1_deploy/entrypoint.sh", "/entrypoint.sh"]
RUN chmod +x /entrypoint.sh

ENV DJANGO_SETTINGS_MODULE=backend.settings_docker

EXPOSE 8000
CMD ["/entrypoint.sh"]
